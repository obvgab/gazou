openapi: '3.1.0'
info:
    title: Neptune Registry
    version: 1.0.1
servers:
    - url: http://127.0.0.1:8080/v2
      description: Testing Server Endpoint
paths:
    /:
        get: # Add authorization in later version
            summary: API version check
            operationId: getApiVersion
            responses:
                '200':
                    description: API version information
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                version:
                                    type: string
                                    example: '2.0'
    /{repository}/manifests/{reference}:
        head:
            summary: Check if an image/manifest exists in the registry
            operationId: existsManifest
            parameters:
                - name: repository
                  in: path
                  required: true
                  schema:
                      type: string
                  description: Namespace of the repository
                - name: reference
                  in: path
                  required: true
                  schema:
                      type: string
                  description: Either a manifest's digest or a tag
            responses:
                '200':
                    description: Image/Manifest exists on the registry
                    headers:
                        Docker-Content-Digest:
                            description: Relevant digest
                            schema:
                                type: string
                '404':
                    description: Image/Manifest could not be found in registry
        get:
            summary: Retrieve an image manifest
            operationId: getManifest
            parameters:
                - name: repository
                  in: path
                  required: true
                  schema:
                      type: string
                  description: Namespace of the repository
                - name: reference
                  in: path
                  required: true
                  schema:
                      type: string
                  description: Either a manifest's digest or a tag
            responses:
                '200':
                    description: Requested manifest of image
                    content:
                        application/vnd.oci.image.manifest.v1+json:
                            schema:
                                $ref: '#/components/schemas/manifest'
                '404':
                    description: Image manifest not found
        put:
            summary: Push an image manifest
            operationId: uploadManifest
            parameters:
                - name: repository
                  in: path
                  required: true
                  schema:
                      type: string
                  description: Namespace of the repository
                - name: reference
                  in: path
                  required: true
                  schema:
                      type: string
                  description: Either a manifest's digest or a tag
            requestBody:
                description: JSON encoded manifest for an image
                content:
                    application/vnd.oci.image.manifest.v1+json:
                        schema:
                            $ref: '#/components/schemas/manifest'
            responses:
                '201':
                    description: Manifest sucessfully uploaded
                    headers:
                        Location:
                            description: Path representing the uploaded manifest
                            schema:
                                type: string
                        Docker-Content-Digest:
                            description: Digest of the uploaded manifest
                            schema:
                                type: string
                '400':
                    description: Manifest improperly formatted
                '500':
                    description: Manifest could not be uploaded
                    
    /{repository}/blobs/{digest}:
        head:
            summary: Check if a blob exists in the registry
            operationId: existsBlob
            parameters:
                - name: repository
                  in: path
                  required: true
                  schema:
                      type: string
                  description: Namespace of the repository
                - name: digest
                  in: path
                  required: true
                  schema:
                      type: string
                  description: The blob's digest for checking
            responses:
                '200': # Should also include the digest
                    description: Blob exists on the registry
                '404':
                    description: Blob could not be found in registry
        get:
            summary: Retrieve a blob from an image
            operationId: getBlob
            parameters:
                - name: repository
                  in: path
                  required: true
                  schema:
                      type: string
                  description: Namespace of the repository
                - name: digest
                  in: path
                  required: true
                  schema:
                      type: string
                  description: The blob's digest for retrieval
            responses:
                '200':
                    description: Request blob for an image
                    headers:
                        Docker-Content-Digest:
                            description: Relevant digest
                            schema:
                                type: string
                    content: # Switch to anyOf eventually when we support nondist and whatnot
                        application/vnd.oci.image.layer.v1.tar+gzip: # Should also include the digest
                            schema:
                                type: string
                                format: binary
                '404':
                    description: Image blob not found
    /{repository}/blobs/uploads:
        post:
            summary: Begin uploading a chunked blob
            operationId: startUploadBlob
            parameters:
                - name: repository
                  in: path
                  required: true
                  schema:
                      type: string
                  description: Namespace of the repository
            responses: # Add unauthorized or not found
                '202':
                    description: Upload has begun with assigned UUID
                    headers:
                        Location:
                            description: Path with UUID representing a unique session for uploading
                            schema:
                                type: string
                        Docker-Upload-UUID:
                            description: UUID assigned to upload operation
                            schema:
                                type: string # I think Swift treats UUIDs as strings not ints
                '500':
                    description: Failed to start upload session
    /{repository}/blobs/upload/{uuid}:
        patch:
            summary: Upload segment of chunked blob
            operationId: continueUploadBlob
            parameters:
                - name: repository
                  in: path
                  required: true
                  schema:
                      type: string
                  description: Namespace of the repository
                - name: uuid
                  in: path
                  required: true
                  schema:
                      type: string
                  description: UUID for the upload session
            requestBody:
                description: Segment of the chunked blob
                content:
                    application/octet-stream:
                        schema:
                            type: string
                            format: binary
            responses: # Add unauthorized or not found
                '202':
                    description: Chunk has been uploaded successfully
                    headers:
                        Location:
                            description: Path with UUID representing a unique session for uploading
                            schema:
                                type: string
                        Docker-Upload-UUID:
                            description: UUID assigned to upload operation
                            schema:
                                type: string # I think Swift treats UUIDs as strings not ints
                        Content-Length:
                            description: Content length of the current chunk
                            schema:
                                type: integer
                        Content-Range:
                            description: Range of bytes of the current chunk
                            schema:
                                type: string
                '500':
                    description: Failed to upload chunk
        put:
            summary: Complete upload of chunked blob
            operationId: finishUploadBlob # Allow for final put to have chunk?
            parameters:
                - name: repository
                  in: path
                  required: true
                  schema:
                      type: string
                  description: Namespace of the repository
                - name: uuid
                  in: path
                  required: true
                  schema:
                      type: string
                  description: UUID for the upload session
                - name: digest
                  in: query
                  required: true
                  schema:
                     type: string
                  description: Digest of the completed file
            responses:
                '201':
                    description: Blob has been sucessfully uploaded
                    headers:
                        Content-Length:
                            description: Content length of the current chunk
                            schema:
                                type: integer
                        Docker-Content-Digest:
                            description: Relevant digest
                            schema:
                                type: string
                '500':
                    description: Failed to finish upload
components:
    schemas:
        descriptor:
            type: object
            properties:
                mediaType:
                    type: string
                digest:
                    type: string
                size:
                    type: integer
                urls:
                    type: array
                    items:
                        type: string
                annotations:
                    type: object
                    additionalProperties:
                        type: string
                data:
                    type: string
                artifactType:
                    type: string
            required:
                - mediaType
                - digest
                - size
        manifest:
            type: object
            properties:
                schemaVersion:
                    type: integer
                mediaType:
                    type: string
                artifactType:
                    type: string
                config:
                    $ref: '#/components/schemas/descriptor'
                layers:
                    type: array
                    items:
                        $ref: '#/components/schemas/descriptor'
                subject:
                    $ref: '#/components/schemas/descriptor'
                annotations:
                    type: object
                    additionalProperties:
                        type: string
            required:
                - schemaVersion
                - config


